syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "pkg/api/v1;api";
package api.v1.inventoryservice;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    consumes: ["application/json"];
    produces: ["application/json"];
    info: {
      title: "Inventory service";
      version: "1.0.0";
      description: "Service for managing inventory";
    };
};

// Общий enum для статусов ответов
enum ResponseStatus {
    UNKNOWN = 0;
    SUCCESS = 1;
    INSUFFICIENT_QUANTITY = 2;
    INTERNAL_ERROR = 3;
}

// Сообщение для запроса резервирования товара
message ReserveItemRequest {
    int64 product_id = 1 [(validate.rules).int64.gt = 0];
    int32 quantity = 2 [(validate.rules).int32.gt = 0];
}

// Сообщение для ответа на резервирование товара
message ReserveItemResponse {
    ResponseStatus status = 1;
}

// Сообщение для запроса компенсации товара
message CompensateItemRequest {
    int64 product_id = 1 [(validate.rules).int64.gt = 0];
    int32 quantity = 2 [(validate.rules).int32.gt = 0];
}

// Сообщение для ответа на компенсацию товара
message CompensateItemResponse {
    ResponseStatus status = 1;
}

// Сервис управления инвентарем
service InventoryService {
    // Резервирование товара
    rpc ReserveItem(ReserveItemRequest) returns (ReserveItemResponse) {
        option (google.api.http) = {
            post: "/api/v1/inventory/reserve"
            body: "*"
        };
    }

    // Компенсация товара
    rpc CompensateItem(CompensateItemRequest) returns (CompensateItemResponse) {
        option (google.api.http) = {
            post: "/api/v1/inventory/compensate"
            body: "*"
        };
    }
}
